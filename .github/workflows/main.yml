name: Build Revit Addin (.NET 8)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üß© Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: üì¶ Download Revit API DLLs via gh
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'
          $repo = 'SHarpreet89/MyRevitAddin'
          $tag  = 'v1.0.0'
          $asset = 'RevitApis.zip'

          Write-Host "üì• Downloading $asset from $repo@$tag ..."
          gh release download $tag --repo $repo --pattern $asset --dir .

          if (-not (Test-Path $asset)) { throw "‚ùå $asset was not downloaded." }

          $size = (Get-Item $asset).Length
          if ($size -lt 1000000) { throw "‚ùå ZIP too small ($size bytes). Wrong asset or corrupted." }

          $extractDir = Join-Path $PWD 'revapi'
          if (Test-Path $extractDir) { Remove-Item $extractDir -Recurse -Force }
          New-Item -ItemType Directory -Path $extractDir | Out-Null

          Expand-Archive -Path $asset -DestinationPath $extractDir -Force

          $api   = Get-ChildItem -Recurse $extractDir -Filter 'RevitAPI.dll'    | Select-Object -First 1
          $apiUI = Get-ChildItem -Recurse $extractDir -Filter 'RevitAPIUI.dll' | Select-Object -First 1
          if (-not $api -or -not $apiUI) { throw "‚ùå RevitAPI.dll and/or RevitAPIUI.dll not found in ZIP." }

          if ((Get-Item $api.FullName).Length -lt 10000000)  { throw "‚ùå RevitAPI.dll too small." }
          if ((Get-Item $apiUI.FullName).Length -lt 10000000){ throw "‚ùå RevitAPIUI.dll too small." }

          Copy-Item $api.FullName   -Destination (Join-Path $PWD 'RevitAPI.dll')   -Force
          Copy-Item $apiUI.FullName -Destination (Join-Path $PWD 'RevitAPIUI.dll') -Force

          Write-Host "‚úÖ Staged:"
          Get-Item RevitAPI*.dll | Format-Table Name,Length

      - name: üèóÔ∏è Build (Release, net8.0-windows, x64)
        run: dotnet build MyRevitAddin.csproj --configuration Release

      - name: üì§ Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyRevitAddin
          path: bin/Release/net8.0-windows/
