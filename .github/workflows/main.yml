name: Build Revit Addin (.NET 8 - Pure x64 NO 32BITREQ)
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üß© Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: üì¶ Download Revit API DLLs
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'
          gh release download v1.0.0 --repo SHarpreet89/MyRevitAddin --pattern RevitApis.zip --dir .
          Expand-Archive RevitApis.zip -DestinationPath revapi -Force
          $api = Get-ChildItem -Recurse revapi -Filter 'RevitAPI.dll' | Select -First 1
          $apiUI = Get-ChildItem -Recurse revapi -Filter 'RevitAPIUI.dll' | Select -First 1
          Copy-Item $api.FullName RevitAPI.dll -Force
          Copy-Item $apiUI.FullName RevitAPIUI.dll -Force
          Write-Host "‚úÖ Revit API DLLs staged"

      - name: üèóÔ∏è dotnet publish Pure x64
        shell: pwsh
        run: |
          dotnet restore MyRevitAddin.csproj
          dotnet publish MyRevitAddin.csproj -c Release -r win-x64 --self-contained false -p:PublishSingleFile=false -o ./publish -v minimal

      - name: üîç VERIFY CorFlags (MUST BE 32BITREQ: 0)
        shell: pwsh
        run: |
          $dll = "./publish/MyRevitAddin.dll"
          if (-not (Test-Path $dll)) {
            Get-ChildItem -Recurse -Filter "*.dll" | ForEach-Object { Write-Host "$($_.FullName)" }
            throw "‚ùå DLL not found!"
          }
          Write-Host "üéØ TARGET DLL: $dll"
          
          $bytes = [System.IO.File]::ReadAllBytes($dll)
          $peOffset = [BitConverter]::ToInt32($bytes, 0x3C)
          $machine = [BitConverter]::ToUInt16($bytes, $peOffset + 4)
          Write-Host "üîç PE Machine: 0x$($machine.ToString('X4'))"
          
          $corflagsPath = "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\corflags.exe"
          $corflagsOutput = & $corflagsPath $dll
          Write-Host "üîç CorFlags:"
          $corflagsOutput | ForEach-Object { Write-Host "   $_" }
          
          $outputText = $corflagsOutput -join " "
          if ($outputText -match "PE32\+" -and $outputText -match "32BITREQ\s*:\s*0" -and $outputText -match "ILONLY\s*:\s*1") {
            Write-Host "üéâ REVIT 2025 PERFECT: PE32+ ILONLY 32BITREQ=0 ‚úÖ‚úÖ‚úÖ"
          } else {
            throw "‚ùå WRONG FLAGS! 32BITREQ must be 0 for Revit 2025!"
          }

      - name: üì§ Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyRevitAddin-REVIT2025-CORRECT
          path: ./publish/MyRevitAddin.dll
          retention-days: 90
