name: Build Revit Addin (.NET 8 - Pure x64)
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üß© Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: üì¶ Download Revit API DLLs
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $ErrorActionPreference = 'Stop'
          gh release download v1.0.0 --repo SHarpreet89/MyRevitAddin --pattern RevitApis.zip --dir .
          Expand-Archive RevitApis.zip -DestinationPath revapi -Force
          $api = Get-ChildItem -Recurse revapi -Filter 'RevitAPI.dll' | Select -First 1
          $apiUI = Get-ChildItem -Recurse revapi -Filter 'RevitAPIUI.dll' | Select -First 1
          Copy-Item $api.FullName RevitAPI.dll -Force
          Copy-Item $apiUI.FullName RevitAPIUI.dll -Force
          Write-Host "‚úÖ Revit API DLLs staged"

      - name: üèóÔ∏è MSBuild Pure x64 (Revit 2025 Compatible)
        shell: pwsh
        run: |
          # Use MSBuild directly (not dotnet build) with explicit x64
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\Bin\MSBuild.exe" MyRevitAddin.csproj `
            /p:Configuration=Release `
            /p:Platform=x64 `
            /p:TargetFramework=net8.0-windows `
            /p:PlatformTarget=x64 `
            /p:RuntimeIdentifier=win-x64 `
            /t:Restore,Build `
            /maxcpucount

            - name: üîß Force 32BITREQ Flag (Revit Requirement)
              shell: pwsh
              run: |
                # Find DLL dynamically (handles any folder structure)
                $dll = Get-ChildItem -Recurse -Filter "MyRevitAddin.dll" | Where-Object { $_.FullName -match "Release" -and $_.FullName -match "x64" } | Select-Object -First 1
                
                if (-not $dll) {
                  Write-Host "‚ùå Searching all DLLs:"
                  Get-ChildItem -Recurse -Name "*.dll" | ForEach-Object { Write-Host "Found: $_" }
                  throw "‚ùå MyRevitAddin.dll not found in Release/x64 folders!"
                }
                
                Write-Host "üîç Found DLL: $($dll.FullName)"
                
                # FORCE 32BITREQ flag using corflags
                & corflags $dll.FullName /32BITREQ+ /nologo
                
                # Verify the fix
                $corflags = & corflags $dll.FullName
                Write-Host "üîç FINAL CorFlags:"
                $corflags | ForEach-Object { Write-Host "   $_" }
                
                if ($corflags -match "32BITREQ\s+:\s+0x1") {
                  Write-Host "‚úÖ‚úÖ‚úÖ 32BITREQ SET - Revit 2025 READY ‚úÖ‚úÖ‚úÖ"
                } else {
                  throw "‚ùå 32BITREQ flag NOT set!"
                }

      - name: üì§ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyRevitAddin-pure-x64
          path: |
            bin/x64/Release/**
            bin/Release/**

      - name: üì§ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyRevitAddin-pure-x64
          path: bin/x64/Release/net8.0-windows/
