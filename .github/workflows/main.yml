name: Build Revit Addin (.NET 8)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout repository
        uses: actions/checkout@v4

      - name: üß© Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Download & extract Revit API DLLs (use cache-buster so GitHub doesn't serve stale asset)
      - name: üì¶ Download and extract Revit API DLLs
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $url = 'https://github.com/SHarpreet89/MyRevitAddin/releases/download/v1.0.0/RevitApis.zip'
          $cb  = Get-Random
          $zip = 'RevitApis.zip'

          Write-Host "üì• Downloading: $url?cb=$cb"
          curl -L -o $zip "$url?cb=$cb"

          $size = (Get-Item $zip).Length
          if ($size -lt 1000000) { throw "‚ùå ZIP size too small ($size bytes). Wrong asset or corrupted download." }

          $extractDir = Join-Path $PWD 'revapi'
          if (Test-Path $extractDir) { Remove-Item $extractDir -Recurse -Force }
          New-Item -ItemType Directory -Path $extractDir | Out-Null

          Write-Host "üìÇ Extracting to $extractDir"
          Expand-Archive -Path $zip -DestinationPath $extractDir -Force

          # Copy DLLs to repo root for the HintPaths
          $apiUI = Get-ChildItem -Recurse -Path $extractDir -Filter 'RevitAPIUI.dll' | Select-Object -First 1
          $api   = Get-ChildItem -Recurse -Path $extractDir -Filter 'RevitAPI.dll'    | Select-Object -First 1

          if (-not $api -or -not $apiUI) {
            Get-ChildItem -Recurse $extractDir | ForEach-Object { Write-Host $_.FullName }
            throw "‚ùå RevitAPI.dll and/or RevitAPIUI.dll not found in extracted ZIP."
          }

          if ((Get-Item $api.FullName).Length -lt 10000000)  { throw "‚ùå RevitAPI.dll looks too small ‚Äî wrong version or corrupted." }
          if ((Get-Item $apiUI.FullName).Length -lt 10000000){ throw "‚ùå RevitAPIUI.dll looks too small ‚Äî wrong version or corrupted." }

          Copy-Item $api.FullName   -Destination (Join-Path $PWD 'RevitAPI.dll')   -Force
          Copy-Item $apiUI.FullName -Destination (Join-Path $PWD 'RevitAPIUI.dll') -Force

          Write-Host "‚úÖ Staged:"
          Get-Item RevitAPI*.dll | Format-Table Name,Length

      - name: üèóÔ∏è Build (Release, net8.0-windows, x64)
        run: dotnet build MyRevitAddin.csproj --configuration Release

      - name: üì§ Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyRevitAddin
          path: bin/Release/net8.0-windows/
