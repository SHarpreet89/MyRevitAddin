name: Build TESTPLUGIN (.NET 4.8 - FULL DIAGNOSTICS)
on:
  workflow_dispatch:
  push:
    branches: [ main ]
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: üß© Setup MSBuild
        uses: microsoft/setup-msbuild@v2
      
      - name: üì¶ Download Revit API DLLs
        shell: pwsh
        run: |
          gh release download v1.0.0 --repo SHarpreet89/MyRevitAddin --pattern RevitApis.zip --dir .
          Expand-Archive RevitApis.zip -DestinationPath revapi -Force
          Copy-Item (Get-ChildItem -Recurse revapi -Filter 'RevitAPI.dll' | Select -First 1).FullName RevitAPI.dll -Force
          Copy-Item (Get-ChildItem -Recurse revapi -Filter 'RevitAPIUI.dll' | Select -First 1).FullName RevitAPIUI.dll -Force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: üèóÔ∏è MSBuild TESTPLUGIN x64
        run: |
          msbuild TESTPLUGIN.csproj /p:Configuration=Release /p:Platform=x64 /maxcpucount /v:normal
      
      - name: üî¨ DEEP DIAGNOSTICS - All DLL Metadata
        shell: pwsh
        run: |
          Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
          Write-Host "üîç CRITICAL DIAGNOSTICS FOR LINE 146 CRASH" -ForegroundColor Yellow
          Write-Host "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" -ForegroundColor Cyan
          
          $dll = Get-ChildItem -Recurse -Filter "TESTPLUGIN.dll" | Select-Object -First 1
          
          if (-not $dll) {
            Write-Host "‚ùå TESTPLUGIN.dll NOT FOUND!" -ForegroundColor Red
            exit 1
          }
          
          Write-Host "`nüìÅ DLL Location: $($dll.FullName)" -ForegroundColor Green
          Write-Host "üìä File Size: $([math]::Round($dll.Length/1KB, 2)) KB" -ForegroundColor Green
          Write-Host "üìÖ Created: $($dll.CreationTime)" -ForegroundColor Green
          
          # Find dumpbin.exe dynamically
          Write-Host "`nüîç Locating dumpbin.exe..." -ForegroundColor Cyan
          $dumpbinPaths = @(
            "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Tools\MSVC\*\bin\Hostx64\x64\dumpbin.exe",
            "C:\Program Files (x86)\Microsoft Visual Studio\*\BuildTools\VC\Tools\MSVC\*\bin\Hostx64\x64\dumpbin.exe"
          )
          $dumpbin = Get-ChildItem -Path $dumpbinPaths -ErrorAction SilentlyContinue | Select-Object -First 1
          
          if ($dumpbin) {
            Write-Host "‚úÖ Found: $($dumpbin.FullName)" -ForegroundColor Green
          } else {
            Write-Host "‚ö†Ô∏è dumpbin.exe not found - skipping native dependency check" -ForegroundColor Yellow
          }
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "1Ô∏è‚É£ CORFLAGS CHECK (32-bit vs 64-bit)" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          $corflags = & "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\corflags.exe" $dll.FullName | Out-String
          Write-Host $corflags
          
          # Extract key values with null checks
          $pe = if ($corflags -match "PE\s*:\s*(\S+)") { $matches[1] } else { "UNKNOWN" }
          $ilonly = if ($corflags -match "ILONLY\s*:\s*(\d+)") { $matches[1] } else { "UNKNOWN" }
          $req32bit = if ($corflags -match "32BITREQ\s*:\s*(\d+)") { $matches[1] } else { "UNKNOWN" }
          
          Write-Host "`nüéØ QUICK CHECK:" -ForegroundColor Yellow
          if ($pe -eq "PE32+" -and $ilonly -eq "1" -and $req32bit -eq "0") {
            Write-Host "   ‚úÖ DLL is correctly configured for Revit 2025 x64!" -ForegroundColor Green
          } else {
            Write-Host "   ‚ùå DLL has wrong flags for Revit 2025!" -ForegroundColor Red
            Write-Host "   Expected: PE32+, ILONLY=1, 32BITREQ=0" -ForegroundColor Yellow
            Write-Host "   Got: $pe, ILONLY=$ilonly, 32BITREQ=$req32bit" -ForegroundColor Red
          }
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "2Ô∏è‚É£ ASSEMBLY VERSION (via ILDASM)" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          $ildasm = & "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\ildasm.exe" /text /nobar $dll.FullName
          $versionLine = $ildasm | Select-String -Pattern "\.ver\s+\d+:\d+:\d+:\d+" | Select-Object -First 1
          if ($versionLine) {
            Write-Host $versionLine -ForegroundColor Green
            if ($versionLine -match "\.ver\s+1:0:0:0") {
              Write-Host "‚úÖ Assembly Version is 1.0.0.0 (CORRECT for Revit!)" -ForegroundColor Green
            } else {
              Write-Host "‚ö†Ô∏è Assembly Version is NOT 1.0.0.0 (may cause Line 146 crash!)" -ForegroundColor Red
            }
          } else {
            Write-Host "‚ö†Ô∏è Could not extract version from IL" -ForegroundColor Yellow
          }
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "3Ô∏è‚É£ REFERENCED ASSEMBLIES" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          $refs = $ildasm | Select-String -Pattern "\.assembly extern.*" | Select-Object -First 10
          $refs | ForEach-Object { Write-Host $_ }
          
          if ($dumpbin) {
            Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
            Write-Host "4Ô∏è‚É£ DUMPBIN - PE HEADERS" -ForegroundColor Cyan
            Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
            $headers = & $dumpbin.FullName /headers $dll.FullName | Select-String -Pattern "(machine|magic|subsystem)"
            $headers | ForEach-Object { Write-Host $_ }
            
            Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
            Write-Host "5Ô∏è‚É£ DUMPBIN - NATIVE DEPENDENCIES (Mixed Mode Check)" -ForegroundColor Cyan
            Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
            $deps = & $dumpbin.FullName /dependents $dll.FullName
            Write-Host $deps
            
            if ($deps -match "msvcr|msvcp|vcruntime") {
              Write-Host "`n‚ùå MIXED MODE DETECTED - C++ Runtime Dependencies Found!" -ForegroundColor Red
              Write-Host "   This WILL cause Line 146 crash in Revit!" -ForegroundColor Red
            } else {
              Write-Host "`n‚úÖ Pure Managed Assembly - No Native Dependencies" -ForegroundColor Green
            }
          }
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "6Ô∏è‚É£ STRONG NAME CHECK" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          $sn = & "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\sn.exe" -vf $dll.FullName 2>&1
          Write-Host $sn
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "7Ô∏è‚É£ IL CODE - Execute Method Check" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          $executeMethods = $ildasm | Select-String -Pattern "\.method.*Execute" | Select-Object -First 5
          if ($executeMethods) {
            Write-Host "‚úÖ Found Execute method:" -ForegroundColor Green
            $executeMethods | ForEach-Object { Write-Host $_ }
          } else {
            Write-Host "‚ùå No Execute method found!" -ForegroundColor Red
          }
          
          Write-Host "`n" + "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "8Ô∏è‚É£ COMPARISON WITH REVIT API" -ForegroundColor Cyan
          Write-Host "‚îÄ"*50 -ForegroundColor DarkGray
          Write-Host "RevitAPI.dll flags:"
          $revitCorflags = & "C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\x64\corflags.exe" RevitAPI.dll 2>&1
          $revitCorflags | Select-String -Pattern "(PE|ILONLY|32BIT)" | ForEach-Object { Write-Host $_ }
          
          Write-Host "`n" + "‚ïê"*50 -ForegroundColor Cyan
          Write-Host "‚úÖ DIAGNOSTICS COMPLETE" -ForegroundColor Green
          Write-Host "‚ïê"*50 -ForegroundColor Cyan
          Write-Host "`nüìã KEY FINDINGS FOR LINE 146 CRASH:" -ForegroundColor Yellow
          Write-Host "   PE Type: $pe (must be PE32+)" -ForegroundColor White
          Write-Host "   ILONLY: $ilonly (must be 1)" -ForegroundColor White
          Write-Host "   32BITREQ: $req32bit (must be 0)" -ForegroundColor White
          Write-Host "`nüéØ Next: Check journal.txt for Assembly Version line!" -ForegroundColor Cyan
          Write-Host "`n"
      
      - name: üì§ Upload DLL + Diagnostic Report
        uses: actions/upload-artifact@v4
        with:
          name: TESTPLUGIN-REVIT2025-DIAGNOSTICS
          path: |
            **/TESTPLUGIN.dll
            **/TESTPLUGIN.pdb
          retention-days: 90
